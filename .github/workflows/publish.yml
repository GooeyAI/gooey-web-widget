name: Build and Tag Release

on:
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    env:
      REACT_APP_GOOEY_SERVER: ${{ vars.REACT_APP_GOOEY_SERVER }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: Install dependencies
        run: npm install

      - name: Get latest version from tags and bump patch
        id: version
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"

          VERSION=${LATEST_TAG#v}  # remove leading v
          IFS='.' read -ra PARTS <<< "$VERSION"
          MAJOR=${PARTS[0]}
          MINOR=${PARTS[1]}
          PATCH=${PARTS[2]}
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="v${MAJOR}.${MINOR}.${NEW_PATCH}"

          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update version in package.json
        run: |
          NEW_VERSION=${{ steps.version.outputs.new_version }}
          npm version ${NEW_VERSION#v} --no-git-tag-version

      - name: Build project
        run: npm run build

      - name: Commit and tag release
        run: |
          NEW_VERSION=${{ steps.version.outputs.new_version }}
          
          # Create a detached commit with dist
          git checkout --detach
          git add package.json package-lock.json dist/
          git commit -m "release: $NEW_VERSION"
          git tag $NEW_VERSION
          git push origin $NEW_VERSION
